// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: agent.sql

package database

import (
	"context"
)

const getAgentToken = `-- name: GetAgentToken :one

SELECT token FROM agents
`

func (q *Queries) GetAgentToken(ctx context.Context) (string, error) {
	row := q.db.QueryRowContext(ctx, getAgentToken)
	var token string
	err := row.Scan(&token)
	return token, err
}

const registerAgent = `-- name: RegisterAgent :one
INSERT INTO agents (
  account_id,
  token,
  symbol,
  headquarters,
  credits,
  starting_faction,
  ship_count
)
VALUES ($1, $2, $3, $4, $5, $6, $7)
RETURNING id
`

type RegisterAgentParams struct {
	AccountID       string
	Token           string
	Symbol          string
	Headquarters    string
	Credits         int64
	StartingFaction string
	ShipCount       int32
}

func (q *Queries) RegisterAgent(ctx context.Context, arg RegisterAgentParams) (int32, error) {
	row := q.db.QueryRowContext(ctx, registerAgent,
		arg.AccountID,
		arg.Token,
		arg.Symbol,
		arg.Headquarters,
		arg.Credits,
		arg.StartingFaction,
		arg.ShipCount,
	)
	var id int32
	err := row.Scan(&id)
	return id, err
}
