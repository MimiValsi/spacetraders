// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: faction.sql

package database

import (
	"context"
)

const registerFaction = `-- name: RegisterFaction :one
INSERT INTO factions (symbol, name, description, headquarters, is_recruiting, agent_id)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id
`

type RegisterFactionParams struct {
	Symbol       string
	Name         string
	Description  string
	Headquarters string
	IsRecruiting bool
	AgentID      int32
}

func (q *Queries) RegisterFaction(ctx context.Context, arg RegisterFactionParams) (int32, error) {
	row := q.db.QueryRowContext(ctx, registerFaction,
		arg.Symbol,
		arg.Name,
		arg.Description,
		arg.Headquarters,
		arg.IsRecruiting,
		arg.AgentID,
	)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const registerTraits = `-- name: RegisterTraits :exec

INSERT INTO traits (symbol, name, description, faction_id)
VALUES ($1, $2, $3, $4)
`

type RegisterTraitsParams struct {
	Symbol      string
	Name        string
	Description string
	FactionID   int32
}

func (q *Queries) RegisterTraits(ctx context.Context, arg RegisterTraitsParams) error {
	_, err := q.db.ExecContext(ctx, registerTraits,
		arg.Symbol,
		arg.Name,
		arg.Description,
		arg.FactionID,
	)
	return err
}
